server.port=6020
server.context-path=/exOrder
spring.session.store-type=none

#jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true

#spring.data.mongodb.uri=mongodb://172.31.50.67:27017/bitrade
spring.data.mongodb.custom.hosts[0]=172.31.50.67
spring.data.mongodb.custom.ports[0]=27017
#spring.data.mongodb.custom.replica-set=
#spring.data.mongodb.custom.username=
#spring.data.mongodb.custom.password=
spring.data.mongodb.custom.database=bitrade
spring.data.mongodb.custom.authentication-database=bitrade
spring.data.mongodb.custom.connections-per-host=10
spring.data.mongodb.custom.min-connections-per-host=0

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false

#kafka
spring.kafka.bootstrap-servers=172.31.50.56:9092

spring.kafka.consumer.group-id=default-group
spring.kafka.template.default-topic=test
spring.kafka.listener.concurrency=3
spring.kafka.producer.batch-size=1000

eureka.client.serviceUrl.defaultZone=http://172.31.48.134:7000/eureka/,http://172.31.48.120:7000/eureka/

spring.application.name=exchange-order-processor

## \u4E8C\u7EA7\u63A8\u8350\u4EBA\u5E01\u5E01\u624B\u7EED\u8D39\u4F63\u91D1\u662F\u5426\u53D1\u653E
#second.referrer.award=true
## \u83B7\u53D6\u6C47\u7387api
#forex.api.key=es10t0TW6mfrLLZO61Ohk4whNVHUbawj
#
#
######################################### hawk netty ########################################
#aqmd.netty.port=28901
### \u8D1F\u8D23\u5904\u7406\u5BA2\u6237\u7AEF\u7684TCP\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5EFA\u8BAE1
#aqmd.netty.bossThreadSize=1
### IO\u8BFB\u5199\u7EBF\u7A0B\uFF0C\u5EFA\u8BAE1<N<CPU\u6838\u5FC3\u6570*2
#aqmd.netty.worker-thread-size=3
### \u5305\u5934\u8868\u793A\u5305\u957F\u5EA6\u5360\u7684\u957F\u5EA6
#aqmd.netty.packetHeaderLength=4
### \u6570\u636E\u5305\u6700\u5927\u503C\uFF0C\u8D85\u8FC7\u629BTooLongFrameException
#aqmd.netty.max-frame-length=2147483647
#
### \u5199\u7A7A\u95F2\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2
#aqmd.netty.writer-idle=200
#
#
### \u4E1A\u52A1\u6700\u5927\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2
#aqmd.netty.max-timeout=60
### \u4E1A\u52A1\u7F3A\u7701\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2
#aqmd.netty.defaultTimeout=30
###\u5177\u4F53\u4E1A\u52A1\u5904\u7406\u7684handler\u7EBF\u7A0B\u6570
#aqmd.netty.deal-handler-thread-size=10
###netty\u65E5\u5FD7\u7EA7\u522B\u8BBE\u7F6E
#aqmd.netty.serviceLoggerLevel=debug
###\u5F00\u542F\u4E0D\u767B\u9646\u8BBF\u95EE
#aqmd.netty.direct-access-flag=1
###\u5141\u8BB8\u8BBF\u95EE\u7684\u6307\u4EE4
#aqmd.netty.direct-access-command=11004,20001,20002,20021,20022
#
##aqmd.netty.websocket-flag=1
##aqmd.netty.websocket-port=28985
#
#apns.cert-file-path=/home/deploy/conf/apns.p12
#apns.cert-file-password=123456
#apns.bundle-id=com.qinghuait.digitalCurrency
#apns.dev-env=true

#redis
spring.redis.host=172.31.50.183
spring.redis.password=Credit2016Admin
spring.redis.port=6379
spring.redis.database=0
#################redis\u7EBF\u7A0B\u6C60\u8BBE\u7F6E#################
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4 \u5355\u4F4D ms\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=1000000
#\u6700\u5927\u94FE\u63A5\u6570
spring.redis.maxTotal=500
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u9ED8\u8BA4\u503C\u4E5F\u662F8\u3002
spring.redis.pool.max-idle=20
#\u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u9ED8\u8BA4\u503C\u4E5F\u662F0\u3002
spring.redis.pool.min-idle=10
# \u5982\u679C\u8D4B\u503C\u4E3A-1\uFF0C\u5219\u8868\u793A\u4E0D\u9650\u5236\uFF1B\u5982\u679Cpool\u5DF2\u7ECF\u5206\u914D\u4E86maxActive\u4E2Ajedis\u5B9E\u4F8B\uFF0C\u5219\u6B64\u65F6pool\u7684\u72B6\u6001\u4E3Aexhausted(\u8017\u5C3D)\u3002
spring.redis.pool.max-active=200
# \u7B49\u5F85\u53EF\u7528\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2\uFF0C\u9ED8\u8BA4\u503C\u4E3A-1\uFF0C\u8868\u793A\u6C38\u4E0D\u8D85\u65F6\u3002\u5982\u679C\u8D85\u8FC7\u7B49\u5F85\u65F6\u95F4\uFF0C\u5219\u76F4\u63A5\u629B\u51FAJedisConnectionException
spring.redis.pool.max-wait=1000

#��Ϣ���͵ļ��ʱ�䣨������Ϣ������Ƶ�ʿ��ƣ�����λΪ����
push.interval.time=500
#spring async�̳߳�����߳�������
spring.async.max.size=2000

###mybatis\u8BFB\u5199\u5206\u79BB\u914D\u7F6E
#mybatis.mapperScanPackage=com.spark.bitrade.mapper.dao
mybatis.mapperLocations=classpath:/com/spark/bitrade/mapper/dao/*.xml
mybatis.typeAliasesPackage=com.spark.bitrade.mapper.dao
mybatis.configLocation=classpath:/mybatis-config.xml
mybatis.datasource.type=com.alibaba.druid.pool.DruidDataSource

#\u5199\u6570\u636E\u5E93\u914D\u7F6E
mysql.datasource.write.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.write.username=deakingit
mysql.datasource.write.password=deakingPassw0rd
mysql.datasource.write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.write.initialSize=200
mysql.datasource.write.minIdle=200
mysql.datasource.write.maxActive=1000
mysql.datasource.write.maxWait=60000
mysql.datasource.write.timeBetweenEvictionRunsMillis=60000
mysql.datasource.write.minEvictableIdleTimeMillis=300000
mysql.datasource.write.validationQuery=select 'x'
mysql.datasource.write.testWhileIdle=true
mysql.datasource.write.testOnBorrow=false
mysql.datasource.write.testOnReturn=false
mysql.datasource.write.poolPreparedStatements=true
mysql.datasource.write.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.write.removeAbandoned=true
mysql.datasource.write.filters=stat

#\u8BFB\u6570\u636E\u5E93\u914D\u7F6E01
mysql.datasource.read01.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.read01.username=deakingit
mysql.datasource.read01.password=deakingPassw0rd
mysql.datasource.read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read01.initialSize=100
mysql.datasource.read01.minIdle=100
mysql.datasource.read01.maxActive=1000
mysql.datasource.read01.maxWait=60000
mysql.datasource.read01.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read01.minEvictableIdleTimeMillis=300000
mysql.datasource.read01.validationQuery=select 'x'
mysql.datasource.read01.testWhileIdle=true
mysql.datasource.read01.testOnBorrow=false
mysql.datasource.read01.testOnReturn=false
mysql.datasource.read01.poolPreparedStatements=true
mysql.datasource.read01.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read01.removeAbandoned=true
mysql.datasource.read01.filters=stat

#\u8BFB\u6570\u636E\u5E93\u914D\u7F6E02
mysql.datasource.read02.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.read02.username=deakingit
mysql.datasource.read02.password=deakingPassw0rd
mysql.datasource.read02.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read02.initialSize=100
mysql.datasource.read02.minIdle=100
mysql.datasource.read02.maxActive=1000
mysql.datasource.read02.maxWait=60000
mysql.datasource.read02.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read02.minEvictableIdleTimeMillis=300000
mysql.datasource.read02.validationQuery=select 'x'
mysql.datasource.read02.testWhileIdle=true
mysql.datasource.read02.testOnBorrow=false
mysql.datasource.read02.testOnReturn=false
mysql.datasource.read02.poolPreparedStatements=true
mysql.datasource.read02.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read02.removeAbandoned=true
mysql.datasource.read02.filters=stat