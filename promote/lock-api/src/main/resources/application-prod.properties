server.port=6026
server.context-path=/lock-api
#spring.session.store-type=none
#kafka
spring.kafka.bootstrap-servers=172.31.50.56:9092
spring.kafka.consumer.group-id=default-group
spring.kafka.template.default-topic= test
spring.kafka.listener.concurrency= 1


#kafka.producer.servers=114.55.94.18:9092
kafka.producer.servers=172.31.50.56:9092
kafka.producer.retries=0
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960

#Ribbon配置
# 关闭Ribbon的重试机制
ribbon.MaxAutoRetriesNextServer=0
ribbon.ReadTimeout=5000
ribbon.ConnectTimeout=5000

spring.devtools.restart.enabled=true
#datasource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
##spring.datasource.url=jdbc:mysql://silktradertest2.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
#spring.datasource.username=deakingit
#spring.datasource.password=
#
##druid connection pool
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.initialSize=50
#spring.datasource.minIdle=50
#spring.datasource.maxActive=500
#spring.datasource.maxWait=60000
#spring.datasource.timeBetweenEvictionRunsMillis=60000
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#spring.datasource.filters=stat,wall,log4j

#jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true

#redis
spring.redis.host=172.31.50.183
spring.redis.password=ENC(fm+l8Qn6cq6t+XB5wXs6W7/fupGxZ1gL)
spring.redis.port=6379
spring.redis.database=0
#################redis线程池设置#################
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=1000000
#最大链接数
spring.redis.maxTotal=500
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.pool.max-idle=2
#连接池中的最小空闲连接，默认值也是0。
spring.redis.pool.min-idle=1
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.pool.max-active=200
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.pool.max-wait=1000

#spring.data.mongodb.uri=mongodb://gcc:galaxy@47.52.129.157:27017/galaxy
#spring.data.mongodb.uri=mongodb://172.31.50.67:27017/bitrade
spring.data.mongodb.custom.hosts[0]=172.31.50.153
spring.data.mongodb.custom.ports[0]=27017
spring.data.mongodb.custom.hosts[1]=172.31.53.136
spring.data.mongodb.custom.ports[1]=27017
spring.data.mongodb.custom.hosts[2]=172.31.54.73
spring.data.mongodb.custom.ports[2]=27017
spring.data.mongodb.custom.username=admin
spring.data.mongodb.custom.password=ENC(vQXbBoggKEPild+PWGu7vIl1yRjexEzg)
spring.data.mongodb.custom.database=bitrade
spring.data.mongodb.custom.authentication-database=admin
spring.data.mongodb.custom.connections-per-host=1
spring.data.mongodb.custom.min-connections-per-host=0

## ע��ʱʹ��ip������������
eureka.instance.prefer-ip-address=true
spring.application.name=service-lock

#eureka
eureka.client.serviceUrl.defaultZone=http://172.31.48.134:7000/eureka/,http://172.31.48.120:7000/eureka/


###mybatis读写分离配置
#mybatis.mapperScanPackage=com.spark.bitrade.mapper.dao
mybatis.mapperLocations=classpath:/com/spark/bitrade/mapper/dao/*.xml
mybatis.typeAliasesPackage=com.spark.bitrade.mapper.dao
mybatis.configLocation=classpath:/mybatis-config.xml
mybatis.datasource.type=com.alibaba.druid.pool.DruidDataSource

#写数据库配置
mysql.datasource.write.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.write.username=dk-lock-api
mysql.datasource.write.password=ENC(47//QHJjfmb309Ym33FgDbJoVLv5Zxdc76W8Pduw3lQ=)
mysql.datasource.write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.write.initialSize=1
mysql.datasource.write.minIdle=5
mysql.datasource.write.maxActive=100
mysql.datasource.write.maxWait=60000
mysql.datasource.write.timeBetweenEvictionRunsMillis=60000
mysql.datasource.write.minEvictableIdleTimeMillis=300000
mysql.datasource.write.validationQuery=select 'x'
mysql.datasource.write.testWhileIdle=true
mysql.datasource.write.testOnBorrow=false
mysql.datasource.write.testOnReturn=false
mysql.datasource.write.poolPreparedStatements=true
mysql.datasource.write.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.write.removeAbandoned=true
mysql.datasource.write.filters=stat

#读数据库配置01
mysql.datasource.read01.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.read01.username=dk-lock-api
mysql.datasource.read01.password=ENC(47//QHJjfmb309Ym33FgDbJoVLv5Zxdc76W8Pduw3lQ=)
mysql.datasource.read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read01.initialSize=1
mysql.datasource.read01.minIdle=5
mysql.datasource.read01.maxActive=100
mysql.datasource.read01.maxWait=60000
mysql.datasource.read01.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read01.minEvictableIdleTimeMillis=300000
mysql.datasource.read01.validationQuery=select 'x'
mysql.datasource.read01.testWhileIdle=true
mysql.datasource.read01.testOnBorrow=false
mysql.datasource.read01.testOnReturn=false
mysql.datasource.read01.poolPreparedStatements=true
mysql.datasource.read01.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read01.removeAbandoned=true
mysql.datasource.read01.filters=stat

#读数据库配置02
mysql.datasource.read02.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.read02.username=dk-lock-api
mysql.datasource.read02.password=ENC(47//QHJjfmb309Ym33FgDbJoVLv5Zxdc76W8Pduw3lQ=)
mysql.datasource.read02.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read02.initialSize=1
mysql.datasource.read02.minIdle=5
mysql.datasource.read02.maxActive=100
mysql.datasource.read02.maxWait=60000
mysql.datasource.read02.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read02.minEvictableIdleTimeMillis=300000
mysql.datasource.read02.validationQuery=select 'x'
mysql.datasource.read02.testWhileIdle=true
mysql.datasource.read02.testOnBorrow=false
mysql.datasource.read02.testOnReturn=false
mysql.datasource.read02.poolPreparedStatements=true
mysql.datasource.read02.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read02.removeAbandoned=true
mysql.datasource.read02.filters=stat

#swagger 开关 ：true-false
swagger.is.enable=false

#锁仓CNYT增值默认周期数
lock.cycle=1
#锁仓CNYT增值按币种配置周期数
lock.cycle.maps={CNYT: 1, BT: 1}

#锁仓默认培养奖利率
lock.training.rate=0.1
#锁仓按币种配置培养奖利率
lock.training.rate.maps={CNYT: 0.1, BT: 0.1}
#sto锁仓默认等级显示
lock.default.level=-
#升级为实时返佣的时间（兼容周期返佣）
lock.update.version.date=2019-03-18 17:00:00