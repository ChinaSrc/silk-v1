server.port=6004
server.context-path=/market
spring.session.store-type=none

#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
#spring.datasource.username=deakingit
#spring.datasource.password=deakingPassw0rd

#jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true

#spring.data.mongodb.uri=mongodb://172.31.50.67:27017/bitrade
#spring.data.mongodb.custom.hosts[0]=172.31.50.67
#spring.data.mongodb.custom.ports[0]=27017
##spring.data.mongodb.custom.replica-set=
##spring.data.mongodb.custom.username=
##spring.data.mongodb.custom.password=
#spring.data.mongodb.custom.database=bitrade
#spring.data.mongodb.custom.authentication-database=bitrade
#spring.data.mongodb.custom.connections-per-host=300
#spring.data.mongodb.custom.min-connections-per-host=10
spring.data.mongodb.custom.hosts[0]=172.31.50.153
spring.data.mongodb.custom.ports[0]=27017
spring.data.mongodb.custom.hosts[1]=172.31.53.136
spring.data.mongodb.custom.ports[1]=27017
spring.data.mongodb.custom.hosts[2]=172.31.54.73
spring.data.mongodb.custom.ports[2]=27017
spring.data.mongodb.custom.replica-set=s0
spring.data.mongodb.custom.username=admin
spring.data.mongodb.custom.password=deaking123
spring.data.mongodb.custom.database=bitrade
spring.data.mongodb.custom.authentication-database=admin
spring.data.mongodb.custom.connections-per-host=200
spring.data.mongodb.custom.min-connections-per-host=10

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false

#kafka
spring.kafka.bootstrap-servers=172.31.50.56:9092

spring.kafka.consumer.group-id=default-group
spring.kafka.template.default-topic=test
spring.kafka.listener.concurrency=3
spring.kafka.producer.batch-size=1000

eureka.client.serviceUrl.defaultZone=http://172.31.48.134:7000/eureka/,http://172.31.48.120:7000/eureka/

spring.application.name=bitrade-market
# 二级推荐人币币手续费佣金是否发放
second.referrer.award=true
# 获取汇率api
forex.api.key=es10t0TW6mfrLLZO61Ohk4whNVHUbawj


######################################## hawk netty ########################################
aqmd.netty.port=28901
## 负责处理客户端的TCP连接请求，建议1
aqmd.netty.bossThreadSize=1
## IO读写线程，建议1<N<CPU核心数*2
aqmd.netty.worker-thread-size=3
## 包头表示包长度占的长度
aqmd.netty.packetHeaderLength=4
## 数据包最大值，超过抛TooLongFrameException
aqmd.netty.max-frame-length=2147483647

## 写空闲时间，单位：秒
aqmd.netty.writer-idle=200


## 业务最大超时时间，单位：秒
aqmd.netty.max-timeout=60
## 业务缺省超时时间，单位：秒
aqmd.netty.defaultTimeout=30
##具体业务处理的handler线程数
aqmd.netty.deal-handler-thread-size=10
##netty日志级别设置
aqmd.netty.serviceLoggerLevel=debug
##开启不登陆访问
aqmd.netty.direct-access-flag=1
##允许访问的指令
aqmd.netty.direct-access-command=11004,20001,20002,20021,20022

#aqmd.netty.websocket-flag=1
#aqmd.netty.websocket-port=28985

apns.cert-file-path=/home/deploy/conf/apns.p12
apns.cert-file-password=123456
apns.bundle-id=com.qinghuait.digitalCurrency
apns.dev-env=true

#redis
spring.redis.host=172.31.50.183
spring.redis.password=Credit2016Admin
spring.redis.port=6379
spring.redis.database=0
#################redis线程池设置#################
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=1000000
#最大链接数
spring.redis.maxTotal=500
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.pool.max-idle=20
#连接池中的最小空闲连接，默认值也是0。
spring.redis.pool.min-idle=10
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.pool.max-active=200
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.pool.max-wait=1000

#设置盘口推送条数
push.plate.size=15
#消息推送的间隔时间（推送消息到界面频率控制），单位为毫秒
push.interval.time=200
#实时成交 集合大小
push.trade.newest.size=20

########## spring async线程池配置 ##########
#线程存活的时间（5分钟）
spring.async.keep.alive.seconds=3000

##async默认线程池线程数配置
spring.async.min.size:300
#最大线程池
spring.async.max.size=0
#线程池最大队列
spring.async.queue.capacity=0

##线程池配置--交易明细模块
#初始化线程池
spring.async.trade.min.size=300
#最大线程池
spring.async.trade.max.size=500
#线程池最大队列（超过多队列后线程池的队列会增加，线程拒绝策略为“主线程执行”）
spring.async.trade.queue.capacity=2000

##线程池配置--订单状态模块
spring.async.order.min.size=200
spring.async.order.max.size=300
spring.async.order.queue.capacity=1000

##线程池配置--返佣模块
spring.async.reward.min.size=50
spring.async.reward.max.size=200
spring.async.reward.queue.capacity=1000

##线程池配置--MongoDB库模块
spring.async.mongodb.min.size=100
spring.async.mongodb.max.size=500
spring.async.mongodb.queue.capacity=2000

##线程池配置--MongoDB库模块2
spring.async.mongodb2.min.size=5
spring.async.mongodb2.max.size=10
spring.async.mongodb2.queue.capacity=1000
########## spring async线程池配置 ##########

#配置交易区
market.custom.tradeCategory[0]=CNYT
market.custom.tradeCategory[1]=USDT
market.custom.tradeCategory[2]=ETH

###mybatis读写分离配置
#mybatis.mapperScanPackage=com.spark.bitrade.mapper.dao
mybatis.mapperLocations=classpath:/com/spark/bitrade/mapper/dao/*.xml
mybatis.typeAliasesPackage=com.spark.bitrade.mapper.dao
mybatis.configLocation=classpath:/mybatis-config.xml
mybatis.datasource.type=com.alibaba.druid.pool.DruidDataSource

#写数据库配置
mysql.datasource.write.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.write.username=deakingit
mysql.datasource.write.password=deakingPassw0rd
mysql.datasource.write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.write.initialSize=200
mysql.datasource.write.minIdle=200
mysql.datasource.write.maxActive=1000
mysql.datasource.write.maxWait=60000
mysql.datasource.write.timeBetweenEvictionRunsMillis=60000
mysql.datasource.write.minEvictableIdleTimeMillis=300000
mysql.datasource.write.validationQuery=select 'x'
mysql.datasource.write.testWhileIdle=true
mysql.datasource.write.testOnBorrow=false
mysql.datasource.write.testOnReturn=false
mysql.datasource.write.poolPreparedStatements=true
mysql.datasource.write.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.write.removeAbandoned=true
mysql.datasource.write.filters=stat

#读数据库配置01
mysql.datasource.read01.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.read01.username=deakingit
mysql.datasource.read01.password=deakingPassw0rd
mysql.datasource.read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read01.initialSize=100
mysql.datasource.read01.minIdle=100
mysql.datasource.read01.maxActive=1000
mysql.datasource.read01.maxWait=60000
mysql.datasource.read01.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read01.minEvictableIdleTimeMillis=300000
mysql.datasource.read01.validationQuery=select 'x'
mysql.datasource.read01.testWhileIdle=true
mysql.datasource.read01.testOnBorrow=false
mysql.datasource.read01.testOnReturn=false
mysql.datasource.read01.poolPreparedStatements=true
mysql.datasource.read01.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read01.removeAbandoned=true
mysql.datasource.read01.filters=stat

#读数据库配置02
mysql.datasource.read02.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
mysql.datasource.read02.username=deakingit
mysql.datasource.read02.password=deakingPassw0rd
mysql.datasource.read02.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read02.initialSize=100
mysql.datasource.read02.minIdle=100
mysql.datasource.read02.maxActive=1000
mysql.datasource.read02.maxWait=60000
mysql.datasource.read02.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read02.minEvictableIdleTimeMillis=300000
mysql.datasource.read02.validationQuery=select 'x'
mysql.datasource.read02.testWhileIdle=true
mysql.datasource.read02.testOnBorrow=false
mysql.datasource.read02.testOnReturn=false
mysql.datasource.read02.poolPreparedStatements=true
mysql.datasource.read02.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read02.removeAbandoned=true
mysql.datasource.read02.filters=stat

#同步外部汇率的币种列表，多个币种用“,”号分隔
job.sync.symbols=HKD,EUR,CNY