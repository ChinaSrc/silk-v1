spring.application.name=service-notice
#eureka.client.serviceUrl.defaultZone=http://114.55.94.18:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/
#server.port=6006
server.port=7008

notice.netty.port=7010
spring.session.store-type=none
#kafka
# \u6307\u5B9Akafka \u4EE3\u7406\u5730\u5740\uFF0C\u53EF\u4EE5\u591A\u4E2A
#spring.kafka.bootstrap-servers=114.55.94.18:9092
#spring.kafka.producer.retries=MAX_VALUE

spring.kafka.bootstrap-servers=127.0.0.1:9092
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=default-group
# \u6307\u5B9A\u9ED8\u8BA4topic id
spring.kafka.template.default-topic=test
# \u6307\u5B9Alistener \u5BB9\u5668\u4E2D\u7684\u7EBF\u7A0B\u6570\uFF0C\u7528\u4E8E\u63D0\u9AD8\u5E76\u53D1\u91CF
spring.kafka.listener.concurrency=3
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=1000
spring.kafka.consumer.enable-auto-commit=false



#=============== provider  ==ww begin=====================


#swagger 配置
#pringfox.documentation.swagger.v2.path: /api-docs
#
#swagger.enabled: true
#swagger.version: 1.0
#swagger.basePackage: com.spark.bitrade.messager.controller
#swagger.basePath: /**
#swagger.excludePath: /error

server.servlet.context-path=/notice

jpush.APP_KEY=87ef90f0412656841e9b2248
 #8ddf929fdbc84b7574e2a312
jpush.MASTER_SECRET=4741e92783010d59b3660cb8
#631266424e9550aee8bb3164

mybatis.mapper-locations=classpath:mapping/*.xml

#编码格式
#spring.http.encoding.force=true
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#server.tomcat.uri-encoding=UTF-8

#国际化

#spring.messages.basename=i18n/notice
#spring.messages.fallback-to-system-locale=false


#Kafka
#spring.kafka.producer.acks=all

#spring.kafka.producer.retries=0
# 每次批量发送消息的数量
#spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id

#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#============ww end===============


#spring.data.mongodb.host=127.0.0.1
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=galaxy
#spring.data.mongodb.username=admin
#spring.data.mongodb.password=Credit2016Admin


#spring.data.mongodb.uri=mongodb://gcc:galaxy@47.52.129.157:27017/galaxy
#spring.data.mongodb.uri=mongodb://172.16.0.86:27017/galaxy
spring.data.mongodb.custom.hosts[0]=127.0.0.1
spring.data.mongodb.custom.ports[0]=27017
spring.data.mongodb.custom.hosts[1]=127.0.0.1
spring.data.mongodb.custom.ports[1]=27017
spring.data.mongodb.custom.hosts[2]=127.0.0.1
spring.data.mongodb.custom.ports[2]=27017
spring.data.mongodb.custom.replica-set=s0
spring.data.mongodb.custom.username=kingvo
spring.data.mongodb.custom.password=ENC(Edk2E83Fr0hOLo3s7Zch0diDkYoDopOz)
spring.data.mongodb.custom.database=galaxy
spring.data.mongodb.custom.authentication-database=galaxy
spring.data.mongodb.custom.connections-per-host=2
spring.data.mongodb.custom.min-connections-per-host=1



spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#spring.datasource.url=jdbc:mysql://47.90.121.145:8899/otc_test?characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=xinhuo123456
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/otc_sync?characterEncoding=utf-8
#spring.datasource.username=bjxy_db
#spring.datasource.password=Credit2016Admin
spring.redis.host=127.0.0.1
spring.redis.password=Credit2016Admin
spring.redis.port=6379
spring.redis.database=0
#druid connection pool
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
#jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true
###mybatis\u4E3B\u4ECE\u914D\u7F6E
mybatis.mapperLocations=classpath:/com/spark/bitrade/mapper/dao/*.xml
mybatis.typeAliasesPackage=com.spark.bitrade.mapper.dao
mybatis.configLocation=classpath:/mybatis-config.xml
mybatis.datasource.type=com.alibaba.druid.pool.DruidDataSource

mysql.datasource.type=com.alibaba.druid.pool.DruidDataSource
#\u5199\u5E93
mysql.datasource.write.url=jdbc:mysql://127.0.0.1:3306/otc_sync?characterEncoding=utf-8&serverTimezone=UTC
mysql.datasource.write.username=bjxy_db
mysql.datasource.write.password=ENC(Edk2E83Fr0hOLo3s7Zch0diDkYoDopOz)
mysql.datasource.write.driver-class-name=com.mysql.cj.jdbc.Driver
mysql.datasource.write.initialSize=10
mysql.datasource.write.minIdle=10
mysql.datasource.write.maxActive=100
mysql.datasource.write.maxWait=60000
mysql.datasource.write.timeBetweenEvictionRunsMillis=60000
mysql.datasource.write.minEvictableIdleTimeMillis=300000
mysql.datasource.write.validationQuery=select 'x'
mysql.datasource.write.testWhileIdle=true
mysql.datasource.write.testOnBorrow=false
mysql.datasource.write.testOnReturn=false
mysql.datasource.write.poolPreparedStatements=true
mysql.datasource.write.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.write.removeAbandoned=true
mysql.datasource.write.filters=stat
#\u8BFB\u5E931
#mysql.datasource.read01.url=jdbc:mysql://127.0.0.1:3306/test1?useUnicode=true&amp;characterEncoding=utf-8
mysql.datasource.read01.url=jdbc:mysql://127.0.0.1:3306/otc_sync?characterEncoding=utf-8&serverTimezone=UTC
mysql.datasource.read01.username=bjxy_db
mysql.datasource.read01.password=ENC(Edk2E83Fr0hOLo3s7Zch0diDkYoDopOz)
mysql.datasource.read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read01.initialSize=10
mysql.datasource.read01.minIdle=10
mysql.datasource.read01.maxActive=100
mysql.datasource.read01.maxWait=60000
mysql.datasource.read01.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read01.minEvictableIdleTimeMillis=300000
mysql.datasource.read01.validationQuery=select 'x'
mysql.datasource.read01.testWhileIdle=true
mysql.datasource.read01.testOnBorrow=false
mysql.datasource.read01.testOnReturn=false
mysql.datasource.read01.poolPreparedStatements=true
mysql.datasource.read01.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read01.removeAbandoned=true
mysql.datasource.read01.filters=stat
#\u8BFB\u5E932
mysql.datasource.read02.url=jdbc:mysql://127.0.0.1:3306/otc_sync?characterEncoding=utf-8&serverTimezone=UTC
mysql.datasource.read02.username=bjxy_db
mysql.datasource.read02.password=ENC(Edk2E83Fr0hOLo3s7Zch0diDkYoDopOz)
mysql.datasource.read02.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read02.initialSize=10
mysql.datasource.read02.minIdle=10
mysql.datasource.read02.maxActive=100
mysql.datasource.read02.maxWait=60000
mysql.datasource.read02.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read02.minEvictableIdleTimeMillis=300000
mysql.datasource.read02.validationQuery=select 'x'
mysql.datasource.read02.testWhileIdle=true
mysql.datasource.read02.testOnBorrow=false
mysql.datasource.read02.testOnReturn=false
mysql.datasource.read02.poolPreparedStatements=true
mysql.datasource.read02.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read02.removeAbandoned=true
mysql.datasource.read02.filters=stat
#\u9700\u8981\u6CE8\u518C\u521B\u5EFA\u8BB0\u5F55\u7684\u94B1\u5305\u5E01\u79CD\uFF0C\u9017\u53F7\u9694\u5F00
spark.system.coins=USDT,CNYT,SLU,ETH,BT
