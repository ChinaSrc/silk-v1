server.port=6005
server.context-path=/extrade
spring.devtools.restart.enabled=true
spring.session.store-type=none
#kafka
# 指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=114.55.94.18:9092
spring.kafka.bootstrap-servers=172.16.0.82:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=default-group
# 指定默认topic id
spring.kafka.template.default-topic= test
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency= 10
# 每次批量发送消息的数量
spring.kafka.producer.batch-size= 1000
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=false

#mongodb
# spring.data.mongodb.uri=mongodb://gcc:galaxy@47.52.129.157:27017/galaxy
#spring.data.mongodb.uri=mongodb://172.16.0.86:27017/bitrade
spring.data.mongodb.custom.hosts[0]=172.16.0.86
spring.data.mongodb.custom.ports[0]=27017
#spring.data.mongodb.custom.replica-set=
#spring.data.mongodb.custom.username=
#spring.data.mongodb.custom.password=
spring.data.mongodb.custom.database=bitrade
spring.data.mongodb.custom.authentication-database=bitrade
spring.data.mongodb.custom.connections-per-host=5
spring.data.mongodb.custom.min-connections-per-host=0

##datasource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
##spring.datasource.url=jdbc:mysql://47.90.121.145:8899/otc_test?characterEncoding=utf-8
##spring.datasource.username=root
##spring.datasource.password=xinhuo123456
#spring.datasource.url=jdbc:mysql://172.16.0.66:3306/otc_test?characterEncoding=utf-8
#spring.datasource.username=bjxy_db
#spring.datasource.password=Credit2016Admin

#druid connection pool
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=0
spring.datasource.minIdle=0
spring.datasource.maxActive=100
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j

#jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true

#euruka
#eureka.client.serviceUrl.defaultZone=http://114.55.94.18:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://172.16.0.85:8761/eureka/,http://172.16.0.78:8761/eureka/
# 注册时使用ip而不是主机名
eureka.instance.prefer-ip-address=true
spring.application.name=service-exchange-trade

#redis
spring.redis.host=172.16.0.91
spring.redis.password=Credit2016Admin
spring.redis.port=6379
spring.redis.database=0
#################redis线程池设置#################
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=1000000
#最大链接数
spring.redis.maxTotal=200
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.pool.max-idle=20
#连接池中的最小空闲连接，默认值也是0。
spring.redis.pool.min-idle=10
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.pool.max-active=100
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.pool.max-wait=1000


###mybatis读写分离配置
#mybatis.mapperScanPackage=com.spark.bitrade.mapper.dao
mybatis.mapperLocations=classpath:/com/spark/bitrade/mapper/dao/*.xml
mybatis.typeAliasesPackage=com.spark.bitrade.mapper.dao
mybatis.configLocation=classpath:/mybatis-config.xml
mybatis.datasource.type=com.alibaba.druid.pool.DruidDataSource

#写数据库配置
mysql.datasource.write.url=jdbc:mysql://172.16.0.66:3306/otc_sync?characterEncoding=utf-8
mysql.datasource.write.username=bjxy_db
mysql.datasource.write.password=Credit2016Admin
mysql.datasource.write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.write.initialSize=0
mysql.datasource.write.minIdle=0
mysql.datasource.write.maxActive=100
mysql.datasource.write.maxWait=60000
mysql.datasource.write.timeBetweenEvictionRunsMillis=60000
mysql.datasource.write.minEvictableIdleTimeMillis=300000
mysql.datasource.write.validationQuery=select 'x'
mysql.datasource.write.testWhileIdle=true
mysql.datasource.write.testOnBorrow=false
mysql.datasource.write.testOnReturn=false
mysql.datasource.write.poolPreparedStatements=true
mysql.datasource.write.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.write.removeAbandoned=true
mysql.datasource.write.filters=stat

#读数据库配置01
mysql.datasource.read01.url=jdbc:mysql://172.16.0.67:3306/otc_sync?characterEncoding=utf-8
mysql.datasource.read01.username=readonly
mysql.datasource.read01.password=password
mysql.datasource.read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read01.initialSize=0
mysql.datasource.read01.minIdle=0
mysql.datasource.read01.maxActive=100
mysql.datasource.read01.maxWait=60000
mysql.datasource.read01.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read01.minEvictableIdleTimeMillis=300000
mysql.datasource.read01.validationQuery=select 'x'
mysql.datasource.read01.testWhileIdle=true
mysql.datasource.read01.testOnBorrow=false
mysql.datasource.read01.testOnReturn=false
mysql.datasource.read01.poolPreparedStatements=true
mysql.datasource.read01.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read01.removeAbandoned=true
mysql.datasource.read01.filters=stat

#读数据库配置02
mysql.datasource.read02.url=jdbc:mysql://172.16.0.67:3306/otc_sync?characterEncoding=utf-8
mysql.datasource.read02.username=readonly
mysql.datasource.read02.password=password
mysql.datasource.read02.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.read02.initialSize=0
mysql.datasource.read02.minIdle=0
mysql.datasource.read02.maxActive=100
mysql.datasource.read02.maxWait=60000
mysql.datasource.read02.timeBetweenEvictionRunsMillis=60000
mysql.datasource.read02.minEvictableIdleTimeMillis=300000
mysql.datasource.read02.validationQuery=select 'x'
mysql.datasource.read02.testWhileIdle=true
mysql.datasource.read02.testOnBorrow=false
mysql.datasource.read02.testOnReturn=false
mysql.datasource.read02.poolPreparedStatements=true
mysql.datasource.read02.maxPoolPreparedStatementPerConnectionSize=50
mysql.datasource.read02.removeAbandoned=true
mysql.datasource.read02.filters=stat
