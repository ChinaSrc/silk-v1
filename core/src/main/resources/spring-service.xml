<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:property-placeholder location="classpath:application.properties"></context:property-placeholder>
    <context:component-scan base-package="com.spark.bitrade.dao" />
    <context:component-scan base-package="com.spark.bitrade.service" />
    <context:component-scan base-package="com.spark.bitrade.config" />
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <!--<property name="url" value="jdbc:mysql://rm-t4n7y6e0efn806591.mysql.singapore.rds.aliyuncs.com:3306/cex_test?characterEncoding=utf-8" />&lt;!&ndash;rm-t4n7y6e0efn806591.mysql.singapore.rds.aliyuncs.com:3306/cex_test&ndash;&gt;-->
        <!--<property name="username" value="root" />-->
        <!--<property name="password" value="Cex_mysql_88" />&lt;!&ndash;Cex_mysql_88&ndash;&gt;-->
        <!--<property name="connectionProperties" value="config.decrypt=false" />-->
        <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/cex_test?characterEncoding=utf-8" />&lt;!&ndash;rm-t4n7y6e0efn806591.mysql.singapore.rds.aliyuncs.com:3306/cex_test&ndash;&gt;-->
        <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/otc_test?characterEncoding=utf-8" />-->
        <!--<property name="username" value="root" />-->
        <!--<property name="password" value="root" />&lt;!&ndash;Cex_mysql_88&ndash;&gt;-->
        <!--<property name="connectionProperties" value="config.decrypt=false" />-->
        <property name="url" value="${spring.druidDataSource.url}" />
        <property name="username" value="${spring.druidDataSource.username}" />
        <property name="password" value="${spring.druidDataSource.password}" /><!--Cex_mysql_88-->
        <property name="connectionProperties" value="config.decrypt=false" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3" />
        <property name="minIdle" value="3" />
        <property name="maxActive" value="20" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>
    <jpa:repositories base-package="com.spark.bitrade.dao" repository-impl-postfix="Impl" entity-manager-factory-ref="entityManagerFactory" />
    <!-- 实体管理器 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.spark.bitrade.entity" />

        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence" />
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="false" />
                <property name="database" value="MYSQL" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
                <!-- <property name="showSql" value="true" /> -->
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.query.substitutions" value="true 1, false 0" />
                <entry key="hibernate.default_batch_fetch_size" value="16" />
                <entry key="hibernate.max_fetch_depth" value="2" />
                <entry key="hibernate.generate_statistics" value="true" />
                <entry key="hibernate.bytecode.use_reflection_optimizer" value="true" />
                <entry key="hibernate.cache.use_second_level_cache" value="false" />
                <entry key="hibernate.cache.use_query_cache" value="false" />
                <entry key="hibernate.physical_naming_strategy" value="org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy" />
            </map>
        </property>
    </bean>
    <bean id="db" class="com.sparkframework.sql.DB">
        <constructor-arg index="0" ref="dataSource" />
        <constructor-arg index="1" value="true" />
    </bean>
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
</beans>